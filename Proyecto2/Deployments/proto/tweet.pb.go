// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: tweet.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tweet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=Description,proto3" json:"Description,omitempty"`
	Country       string                 `protobuf:"bytes,2,opt,name=Country,proto3" json:"Country,omitempty"`
	Weather       string                 `protobuf:"bytes,3,opt,name=Weather,proto3" json:"Weather,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tweet) Reset() {
	*x = Tweet{}
	mi := &file_tweet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tweet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tweet) ProtoMessage() {}

func (x *Tweet) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tweet.ProtoReflect.Descriptor instead.
func (*Tweet) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{0}
}

func (x *Tweet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tweet) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Tweet) GetWeather() string {
	if x != nil {
		return x.Weather
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_tweet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_tweet_proto protoreflect.FileDescriptor

const file_tweet_proto_rawDesc = "" +
	"\n" +
	"\vtweet.proto\x12\x04main\"]\n" +
	"\x05Tweet\x12 \n" +
	"\vDescription\x18\x01 \x01(\tR\vDescription\x12\x18\n" +
	"\aCountry\x18\x02 \x01(\tR\aCountry\x12\x18\n" +
	"\aWeather\x18\x03 \x01(\tR\aWeather\"\"\n" +
	"\bResponse\x12\x16\n" +
	"\x06Status\x18\x01 \x01(\tR\x06Status2o\n" +
	"\x0eTweetPublisher\x12-\n" +
	"\x0ePublishToKafka\x12\v.main.Tweet\x1a\x0e.main.Response\x12.\n" +
	"\x0fPublishToRabbit\x12\v.main.Tweet\x1a\x0e.main.ResponseB\tZ\a./protob\x06proto3"

var (
	file_tweet_proto_rawDescOnce sync.Once
	file_tweet_proto_rawDescData []byte
)

func file_tweet_proto_rawDescGZIP() []byte {
	file_tweet_proto_rawDescOnce.Do(func() {
		file_tweet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tweet_proto_rawDesc), len(file_tweet_proto_rawDesc)))
	})
	return file_tweet_proto_rawDescData
}

var file_tweet_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tweet_proto_goTypes = []any{
	(*Tweet)(nil),    // 0: main.Tweet
	(*Response)(nil), // 1: main.Response
}
var file_tweet_proto_depIdxs = []int32{
	0, // 0: main.TweetPublisher.PublishToKafka:input_type -> main.Tweet
	0, // 1: main.TweetPublisher.PublishToRabbit:input_type -> main.Tweet
	1, // 2: main.TweetPublisher.PublishToKafka:output_type -> main.Response
	1, // 3: main.TweetPublisher.PublishToRabbit:output_type -> main.Response
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tweet_proto_init() }
func file_tweet_proto_init() {
	if File_tweet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tweet_proto_rawDesc), len(file_tweet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tweet_proto_goTypes,
		DependencyIndexes: file_tweet_proto_depIdxs,
		MessageInfos:      file_tweet_proto_msgTypes,
	}.Build()
	File_tweet_proto = out.File
	file_tweet_proto_goTypes = nil
	file_tweet_proto_depIdxs = nil
}
